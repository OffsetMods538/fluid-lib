plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "fluid-lib"
version = "${project.mod_version}+${project.minecraft_version}"


repositories {
	maven {
		name = "JitPack"
		url  = "https://jitpack.io"
		content {
			includeGroup "com.github.LlamaLad7"
		}
	}
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		modid {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
		testmod {
			sourceSet sourceSets.testmod
		}
	}
	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
	}

	createRemapConfigurations(sourceSets.testmod)
	accessWidenerPath = file("src/main/resources/fluid-lib.accesswidener")
}

configurations {
	includeModImplementation

	include.extendsFrom           includeModImplementation
	modImplementation.extendsFrom includeModImplementation


	includeImplementation
	
	include.extendsFrom        includeImplementation
	implementation.extendsFrom includeImplementation
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Uncomment for fabric api
	// modimplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Uncomment for including a module of fabric api
	// includeModImplementation fabricApi.module("fabric-api-base", project.fabric_api_version)

	// Mixin Extras
	includeImplementation "com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"
	annotationProcessor   "com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"


	testmodImplementation sourceSets.main.output
	testmodImplementation sourceSets.client.output

	modTestmodImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
}

processResources {
	inputs.properties(Map.of(
		"modVersion",                 project.version,
		"supportedMinecraftVersions", project.supported_minecraft_versions
	))

	filesMatching("fabric.mod.json") {
		expand(Map.of(
			"modVersion",                 project.version,
			"supportedMinecraftVersions", project.supported_minecraft_versions
		))
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	withJavadocJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
